#------------------------------------------------------------------------------#
# This makefile was generated by 'cbp2make' tool rev.99                        #
#------------------------------------------------------------------------------#


WRKDIR = `pwd`

AS = as
CC = gcc
CPP = g++
F77 = f77
F9X = gfortran
LD = g++
AR = ar
RANLIB = ranlib
WINDRES = windres

INC =  -I/usr/lib/glib-2.0/include/ -I/usr/include/glib-2.0/ -I/usr/include/libxml2 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include/ -I/usr/include/libusb-1.0/ -Iinclude
CFLAGS =  -std=c++0x -Wall `wx-config --cflags` -Winvalid-pch -include wx_pch.h -DWX_PRECOMP
RESINC = 
RCFLAGS = 
LIBDIR = 
LIB =  -lopenobex -lxml2 -ludev
LDFLAGS =  `wx-config --libs` -lusb-1.0 -lglib-2.0

INC_DEBUG =  $(INC)
CFLAGS_DEBUG =  $(CFLAGS) -g
RESINC_DEBUG =  $(RESINC)
RCFLAGS_DEBUG =  $(RCFLAGS)
LIBDIR_DEBUG =  $(LIBDIR)
LIB_DEBUG = $(LIB)
LDFLAGS_DEBUG =  $(LDFLAGS)
OBJDIR_DEBUG = obj/Debug
DEP_DEBUG = 
OUT_DEBUG = bin/Debug/LibreScribe

INC_RELEASE =  $(INC)
CFLAGS_RELEASE =  $(CFLAGS) -O3
RESINC_RELEASE =  $(RESINC)
RCFLAGS_RELEASE =  $(RCFLAGS)
LIBDIR_RELEASE =  $(LIBDIR)
LIB_RELEASE = $(LIB)
LDFLAGS_RELEASE =  -s $(LDFLAGS)
OBJDIR_RELEASE = obj/Release
DEP_RELEASE = 
OUT_RELEASE = bin/Release/LibreScribe

OBJ_DEBUG = $(OBJDIR_DEBUG)/GUIFrame.o $(OBJDIR_DEBUG)/LibreScribe__App.o $(OBJDIR_DEBUG)/LibreScribe__Main.o $(OBJDIR_DEBUG)/src/DeviceInformation.o $(OBJDIR_DEBUG)/src/Smartpen.o

OBJ_RELEASE = $(OBJDIR_RELEASE)/GUIFrame.o $(OBJDIR_RELEASE)/LibreScribe__App.o $(OBJDIR_RELEASE)/LibreScribe__Main.o $(OBJDIR_RELEASE)/src/DeviceInformation.o $(OBJDIR_RELEASE)/src/Smartpen.o

all: debug release

clean: clean_debug clean_release

before_debug: 
	rm -rfv $(TARGET_OUTPUT_DIR)
	test -d bin/Debug || mkdir -p bin/Debug
	test -d $(OBJDIR_DEBUG) || mkdir -p $(OBJDIR_DEBUG)
	test -d $(OBJDIR_DEBUG)/src || mkdir -p $(OBJDIR_DEBUG)/src

after_debug: 
	cp -rfv -L $(PROJECT_DIRECTORY)/res $(TARGET_OUTPUT_DIR)/res
	cp -fv -L $(PROJECT_DIRECTORY)/stf.py $(PROJECT_DIRECTORY)/parsestf.py $(TARGET_OUTPUT_DIR)

debug: before_debug $(OUT_DEBUG) after_debug

$(OUT_DEBUG): $(OBJ_DEBUG) $(DEP_DEBUG)
	$(LD) $(LDFLAGS_DEBUG) $(LIBDIR_DEBUG) -o $(OUT_DEBUG) $(OBJ_DEBUG) $(LIB_DEBUG)

$(OBJDIR_DEBUG)/GUIFrame.o: GUIFrame.cpp
	$(CPP) $(CFLAGS_DEBUG) $(INC_DEBUG) -c -o $(OBJDIR_DEBUG)/GUIFrame.o GUIFrame.cpp

$(OBJDIR_DEBUG)/LibreScribe__App.o: LibreScribe__App.cpp
	$(CPP) $(CFLAGS_DEBUG) $(INC_DEBUG) -c -o $(OBJDIR_DEBUG)/LibreScribe__App.o LibreScribe__App.cpp

$(OBJDIR_DEBUG)/LibreScribe__Main.o: LibreScribe__Main.cpp
	$(CPP) $(CFLAGS_DEBUG) $(INC_DEBUG) -c -o $(OBJDIR_DEBUG)/LibreScribe__Main.o LibreScribe__Main.cpp

$(OBJDIR_DEBUG)/src/DeviceInformation.o: src/DeviceInformation.cpp
	$(CPP) $(CFLAGS_DEBUG) $(INC_DEBUG) -c -o $(OBJDIR_DEBUG)/src/DeviceInformation.o src/DeviceInformation.cpp

$(OBJDIR_DEBUG)/src/Smartpen.o: src/Smartpen.cpp
	$(CPP) $(CFLAGS_DEBUG) $(INC_DEBUG) -c -o $(OBJDIR_DEBUG)/src/Smartpen.o src/Smartpen.cpp

clean_debug: 
	rm -f $(OBJ_DEBUG) $(OUT_DEBUG)
	rm -rf bin/Debug
	rm -rf $(OBJDIR_DEBUG)
	rm -rf $(OBJDIR_DEBUG)/src

before_release: 
	rm -rfv $(TARGET_OUTPUT_DIR)
	test -d bin/Release || mkdir -p bin/Release
	test -d $(OBJDIR_RELEASE) || mkdir -p $(OBJDIR_RELEASE)
	test -d $(OBJDIR_RELEASE)/src || mkdir -p $(OBJDIR_RELEASE)/src

after_release: 
	cp -rfv -L $(PROJECT_DIRECTORY)/res $(TARGET_OUTPUT_DIR)/res
	cp -fv -L $(PROJECT_DIRECTORY)/stf.py $(PROJECT_DIRECTORY)/parsestf.py $(TARGET_OUTPUT_DIR)

release: before_release $(OUT_RELEASE) after_release

$(OUT_RELEASE): $(OBJ_RELEASE) $(DEP_RELEASE)
	$(LD) $(LDFLAGS_RELEASE) $(LIBDIR_RELEASE) -o $(OUT_RELEASE) $(OBJ_RELEASE) $(LIB_RELEASE)

$(OBJDIR_RELEASE)/GUIFrame.o: GUIFrame.cpp
	$(CPP) $(CFLAGS_RELEASE) $(INC_RELEASE) -c -o $(OBJDIR_RELEASE)/GUIFrame.o GUIFrame.cpp

$(OBJDIR_RELEASE)/LibreScribe__App.o: LibreScribe__App.cpp
	$(CPP) $(CFLAGS_RELEASE) $(INC_RELEASE) -c -o $(OBJDIR_RELEASE)/LibreScribe__App.o LibreScribe__App.cpp

$(OBJDIR_RELEASE)/LibreScribe__Main.o: LibreScribe__Main.cpp
	$(CPP) $(CFLAGS_RELEASE) $(INC_RELEASE) -c -o $(OBJDIR_RELEASE)/LibreScribe__Main.o LibreScribe__Main.cpp

$(OBJDIR_RELEASE)/src/DeviceInformation.o: src/DeviceInformation.cpp
	$(CPP) $(CFLAGS_RELEASE) $(INC_RELEASE) -c -o $(OBJDIR_RELEASE)/src/DeviceInformation.o src/DeviceInformation.cpp

$(OBJDIR_RELEASE)/src/Smartpen.o: src/Smartpen.cpp
	$(CPP) $(CFLAGS_RELEASE) $(INC_RELEASE) -c -o $(OBJDIR_RELEASE)/src/Smartpen.o src/Smartpen.cpp

clean_release: 
	rm -f $(OBJ_RELEASE) $(OUT_RELEASE)
	rm -rf bin/Release
	rm -rf $(OBJDIR_RELEASE)
	rm -rf $(OBJDIR_RELEASE)/src

.PHONY: before_debug after_debug clean_debug before_release after_release clean_release

